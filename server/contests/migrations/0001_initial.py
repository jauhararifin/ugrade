# Generated by Django 2.1.7 on 2019-03-30 03:13

import contests.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.MaxLengthValidator(255)])),
                ('short_id', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid'), django.core.validators.MinLengthValidator(4), django.core.validators.MaxLengthValidator(255)])),
                ('short_description', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.MaxLengthValidator(255)])),
                ('description', models.TextField(validators=[django.core.validators.MaxLengthValidator(4194304)])),
                ('start_time', models.DateTimeField()),
                ('freezed', models.BooleanField()),
                ('finish_time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('extensions', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=32, unique=True)),
                ('description', models.TextField(validators=[django.core.validators.MaxLengthValidator(1024)])),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_id', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid'), django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(255)])),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(255)])),
                ('statement', models.TextField(validators=[django.core.validators.MaxLengthValidator(4194304)])),
                ('disabled', models.BooleanField()),
                ('order', models.IntegerField()),
                ('time_limit', models.IntegerField()),
                ('tolerance', models.FloatField()),
                ('memory_limit', models.IntegerField()),
                ('output_limit', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_code', models.FileField(upload_to=contests.models.upload_path)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.Language')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issued_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.MaxLengthValidator(255)], verbose_name='name')),
                ('username', models.CharField(blank=True, default=None, max_length=64, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid'), django.core.validators.MinLengthValidator(4), django.core.validators.MaxLengthValidator(64)], verbose_name='username')),
                ('email', models.EmailField(max_length=255, validators=[django.core.validators.EmailValidator(), django.core.validators.MinLengthValidator(4), django.core.validators.MaxLengthValidator(255)], verbose_name='email')),
                ('password', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('signup_otc', models.CharField(blank=True, default=None, max_length=32, null=True)),
                ('reset_password_otc', models.CharField(blank=True, default=None, max_length=32, null=True)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='contests.Contest')),
                ('permissions', models.ManyToManyField(to='contests.Permission')),
            ],
        ),
        migrations.AddField(
            model_name='submission',
            name='issuer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.User'),
        ),
        migrations.AddField(
            model_name='submission',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.Problem'),
        ),
        migrations.AddField(
            model_name='submission',
            name='solution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.Program'),
        ),
        migrations.AddField(
            model_name='problem',
            name='checker',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='r1', to='contests.Program'),
        ),
        migrations.AddField(
            model_name='problem',
            name='contest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problems', to='contests.Contest'),
        ),
        migrations.AddField(
            model_name='problem',
            name='solution',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='r2', to='contests.Program'),
        ),
        migrations.AddField(
            model_name='problem',
            name='tcgen',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='r3', to='contests.Program'),
        ),
        migrations.AddField(
            model_name='contest',
            name='permitted_languages',
            field=models.ManyToManyField(to='contests.Language'),
        ),
        migrations.AlterUniqueTogether(
            name='user',
            unique_together={('email', 'contest'), ('username', 'contest')},
        ),
        migrations.AlterUniqueTogether(
            name='problem',
            unique_together={('short_id', 'contest')},
        ),
    ]
